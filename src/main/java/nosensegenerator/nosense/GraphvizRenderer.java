package nosensegenerator.nosense;

import guru.nidi.graphviz.engine.Format;
import guru.nidi.graphviz.engine.Graphviz;
import guru.nidi.graphviz.parse.Parser;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

public class GraphvizRenderer {

    // Path to the DOT file, generated by GraphvizGenerator
    private static final String DOT_FILE_PATH =
        System.getProperty("java.io.tmpdir") + "/(fileName).dot";
    // Path to the output PNG file, using the system temp directory
    private static final String PNG_FILE_PATH =
        System.getProperty("java.io.tmpdir") + "/(fileName).png";
    // Path to the web-accessible PNG file
    private static final String WEB_PATH = "(fileName).png";

    /**
     * Renders a dependency graph from a DOT file to a PNG image.
     *
     * @param fileName The name of the file (without extension) to render.
     * @return The filename of the rendered PNG image.
     * @throws IOException If there is an error reading the DOT file or writing the PNG file.
     */
    public static String RenderDependencyGraph(String fileName)
        throws IOException {
        String graph_path = DOT_FILE_PATH.replace("(fileName)", fileName);
        String image_path = PNG_FILE_PATH.replace("(fileName)", fileName);

        // Load DOT string from file
        String dot = new String(Files.readAllBytes(Paths.get(graph_path)));

        Parser parser = new Parser();

        // Parse and render to PNG using Graphviz Java, and save to file
        Graphviz.fromGraph(parser.read(dot))
            .render(Format.PNG)
            .toFile(new File(image_path));

        System.out.println("Graph rendered using Graphviz Java.");

        return WEB_PATH.replace("(fileName)", fileName);
    }
}
