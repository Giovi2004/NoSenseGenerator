@startuml


class NoSenseController {
    -Generator generator
    -Sentence inputSentence
    -Sentence templateSentence
    -Sentence generatedSentence
    -ArrayList<ToxicityResultToken> toxicityResult
    +NoSenseController()
    +void initializeSession(Model model)
    +String index()
    +String analyzeInputSentence(String sentence, boolean requestSyntacticTree, Model model)
    +String generateSentence(String time, Sentence inputSentence, Model model)
    +String saveTerms(Sentence inputSentence, Model model)
    +String analyzeToxicity(Sentence generatedSentence, Model model)
}


class Noun {
    -ArrayList<String> nouns
    -generatedNumber
    -String filePath
    +Noun()
    +String getNoun()
    +void save(ArrayList<String> nounsForFile)
}
class Verb {
    -ArrayList<String> verbs
    -ArrayList<String> verbsPresent
    -ArrayList<String> verbsPast
    -ArrayList<String> verbsFuture
    -generatedNumber
    -String filePath
    -String filePathPresent
    -String filePathPast
    -String filePathFuture
    +Verb()
    +String getVerb(String time)
    +void save(String time, ArrayList<String> verbs)
}
class Adjective {
    -ArrayList<String> adjectives
    -generatedNumber
    -String filePath
    +Adjective()
    +String getAdjective()
    +void save(ArrayList<String> adjectivesForFile)
}
class Sentence {
    -String text
    -ArrayList<AnalysisResultToken> analysisResultTokens
    -ArrayList<ToxicityResultToken> toxicityResultTokens
    +Sentence(String text)
    +String getText()
    +void setText(String text)
    +ArrayList<String> getVerbs(String tense)
    +ArrayList<String> getNouns()
    +ArrayList<String> getAdjectives()
    +ArrayList<AnalysisResultToken> getAnalysisResultTokens()
    +void setAnalysisResultTokens(ArrayList<AnalysisResultToken> analysisResultTokens)
    +ArrayList<ToxicityResultToken> getToxicityResultTokens()
    +void setToxicityResultTokens(ArrayList<ToxicityResultToken> toxicityResultTokens)
}

class Generator {
    -ArrayList<String> templates
    -Noun nouns
    -Verb verbs
    -Adjective adjectives
    -String filePath = "src/main/resources/terms/sentences.txt"
    +Generator()
    +String generateTemplateSentence()
    +Sentence fillTemplateSentence(String template, Sentence inputSentence, String time)
    +void saveFromSentence(Sentence input)
}

class Analyzer {
    -String text
    -static String apiKey;
    +static ArrayList<ToxicityResultToken> analyzeToxicity(String sentence)
    +static ArrayList<AnalysisResultToken> analyzeSyntax(String sentence)
}
class AnalysisResultToken {
    -int index
    -String text
    -String tag
    -String tense
    -String dependencyLabel
    -int dependencyToken
    +AnalysisResultToken(int index, String text, String tag, String dependencyLabel, int dependencyToken, String tense)
    +int getIndex()
    +String getText()
    +String getTag()
    +String getTense()
    +String getDependencyLabel()
    +int getDependencyToken()
}

class FileHandler {
    +static void save(ArrayList<String> terms, ArrayList<String> termsForFile, String filePath)
    +static ArrayList<String> load(String filePath)
}
class ToxicityResultToken {
    -String name
    -Double confidence
    +ToxicityResultToken(String name, Double confidence)
    +String getName()
    +Double getConfidence()
}


NoSenseController "1" *-- "many" Sentence : contains
Generator -->Sentence : generates
NoSenseController --> Analyzer : uses
Analyzer --> Sentence : analyzes
Generator "1" *-- "1" Noun : contains and instantiates
Generator "1" *-- "1" Verb : contains and instantiates
Generator "1" *-- "1" Adjective : contains and instantiates
NoSenseController "1" *-- "1" Generator : contains and instantiates
Noun  --> FileHandler : uses
Verb  --> FileHandler : uses
Adjective  --> FileHandler : uses
Generator  --> FileHandler : uses
Sentence "1" *-- "many" AnalysisResultToken : contains
Sentence "1" *-- "many" ToxicityResultToken : contains

@enduml
