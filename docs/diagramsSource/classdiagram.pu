@startuml
class NoSenseController {
    -Sentence inputSentence
    -Sentence templateSentence
    -Sentence generatedSentence
    -Generator generator
    -Noun nouns
    -Verb verbs
    -Adjective adjectives
    +NoSenseController()
    +void AnalyzeInputSentence(String input)
    +String GenerateTemplateSentence()
    +String FillTemplateSentence()
    +String AnalyzeGeneratedSentenceToxicity()
    +void SaveTerms()
}

class Noun {
    -String noun
    +Noun()
    +String getNoun()
    +void save(List<String> nouns)
}
class Verb {
    -String verb
    +Verb()
    +String getVerb()
    +void save(List<String> verbs)
}
class Adjective {
    -String adjective
    +Adjective()
    +String getAdjective()
    +void save(List<String> adjectives)
}
class Sentence {
    -String text
    -List<String> verbs
    -List<String> nouns
    -List<String> adjectives
    +Sentence(String text)
    +String getText()1
    +void setText(String text)
    +List<String> getVerbs()
    +void setVerbs(List<String> verbs)
    +List<String> getNouns()
    +void setNouns(List<String> nouns)
    +List<String> getAdjectives()
    +void setAdjectives(List<String> adjectives)
}
class Generator {
    -String template
    +Generator()
    +String generateTemplateSentence()
    +String fillTemplateSentence(Sentence templateSentence, Sentence inputSentence, Noun nouns, Verb verbs, Adjective adjectives)
}
class Analyzer {
    -String text
    +static String analyzeToxicity(Sentence sentence)
    +static void analyzeStructure(Sentence sentence)
}

NoSenseController "1" *-- "many" Sentence : contains
Generator --> Noun : uses
Generator --> Verb : uses
Generator --> Adjective : uses
Generator -->Sentence : generates
NoSenseController --> Analyzer : uses
Analyzer --> Sentence : analyzes
NoSenseController "1" *-- "1" Noun : contains and instantiates
NoSenseController "1" *-- "1" Verb : contains and instantiates
NoSenseController "1" *-- "1" Adjective : contains and instantiates
NoSenseController "1" *-- "1" Generator : contains and instantiates

@enduml
